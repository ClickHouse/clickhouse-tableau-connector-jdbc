<?xml version='1.0' encoding='utf-8' ?>

<dialect name='ClickHouse'
         class='clickhouse_jdbc'
         version='18.1'>
  <function-map>
    <function group='numeric' name='ABS' return-type='real'>
      <formula>ABS(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ABS' return-type='int'>
      <formula>ABS(%1)</formula>
      <argument type='int' />
    </function>
    <function group='numeric' name='ACOS' return-type='real'>
      <formula>ACOS(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ASIN' return-type='real'>
      <formula>ASIN(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ATAN' return-type='real'>
      <formula>ATAN(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ATAN2' return-type='real'>
      <formula>ATAN2(%1,%2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='CEILING' return-type='real'>
      <formula>CEILING(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='CEILING' return-type='int'>
      <formula>CEILING(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='CEILING' return-type='int'>
      <formula>CEILING(%1)</formula>
      <argument type='int' />
    </function>
    <function group='numeric' name='COS' return-type='real'>
      <formula>COS(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='COT' return-type='real'>
      <formula>1/nullIf(TAN(%1),0))</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='DEGREES' return-type='real'>
      <formula>(%1 * 180 / PI())</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='DIV' return-type='int'>
      <formula>intDivOrZero(%1, nullIf(%2,0)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='EXP' return-type='real'>
      <formula>EXP(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='FLOOR' return-type='real'>
      <formula>FLOOR(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='FLOOR' return-type='int'>
      <formula>FLOOR(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='FLOOR' return-type='int'>
      <formula>FLOOR(%1)</formula>
      <argument type='int' />
    </function>
    <function group='numeric' name='HEXBINX' return-type='real'>
      <formula>(((CASE WHEN (ABS((%2) - (CAST( ( (%2) / SQRT(3.0) ) AS NUMERIC(18, 0) ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((%1) - (CAST( ( (%1) / 3.0 ) AS NUMERIC(18, 0) ) * 3.0))) - 1.0) &gt; 0.0 THEN 1.5 ELSE 0.0 END) - (CASE WHEN ((%1) - (CAST( ( (%1) / 3.0 ) AS NUMERIC(18, 0) ) * 3.0) &lt; 0.0) AND ((CASE WHEN (ABS((%2) - (CAST( ( (%2) / SQRT(3.0) ) AS NUMERIC(18, 0) ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((%1) - (CAST( ( (%1) / 3.0 ) AS NUMERIC(18, 0) ) * 3.0))) - 1.0) &gt; 0.0 THEN 1.5 ELSE 0.0 END) &gt; 0.0) THEN 3.0 ELSE 0.0 END)) + (CAST( ( (%1) / 3.0 ) AS NUMERIC(18, 0) ) * 3.0))</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='HEXBINY' return-type='real'>
      <formula>ROUND( (((CASE WHEN (ABS((%2) - (ROUND( ( (%2) / SQRT(3.0) ), 0 ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((%1) - (ROUND( ( (%1) / 3.0 ), 0 ) * 3.0))) - 1.0) &gt; 0.0 THEN SQRT(3.0) / 2.0 ELSE 0.0 END) - (CASE WHEN ((%2) - (ROUND( ( (%2) / SQRT(3.0) ), 0 ) * SQRT(3.0)) &lt; 0.0) AND ((CASE WHEN (ABS((%2) - (ROUND( ( (%2) / SQRT(3.0) ), 0 ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((%1) - (ROUND( ( (%1) / 3.0 ), 0 ) * 3.0))) - 1.0) &gt; 0.0 THEN SQRT(3.0) / 2.0 ELSE 0.0 END) &gt; 0.0) THEN SQRT(3.0) ELSE 0.0 END)) + (ROUND( ( (%2) / SQRT(3.0) ), 0 ) * SQRT(3.0))), 3)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='LN' return-type='real'>
      <formula>if(%1 &gt; 0, LN(%1), NULL)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='LOG' return-type='real'>
      <formula>LOG10(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='LOG' return-type='real'>
      <formula>if(%1 &gt; 0 AND %2 &gt; 0 AND % != 0, LN(%1)/LN(%2), NULL)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='LOG2' return-type='real'>
      <formula>if(%1 &gt; 0, LOG2(%1), NULL)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='MAX' return-type='real'>
      <formula>GREATEST(%1, %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='MAX' return-type='int'>
      <formula>GREATEST(%1, %2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='MAX' return-type='str'>
      <formula>GREATEST(%1, %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='numeric' name='MAX' return-type='datetime'>
      <formula>GREATEST(%1,%2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='numeric' name='MAX' return-type='date'>
      <formula>GREATEST(%1,%2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='numeric' name='MIN' return-type='real'>
      <formula>LEAST(%1,%2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='MIN' return-type='int'>
      <formula>LEAST(%1,%2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='MIN' return-type='str'>
      <formula>LEAST(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='numeric' name='MIN' return-type='datetime'>
      <formula>LEAST(%1,%2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='numeric' name='MIN' return-type='date'>
      <formula>LEAST(%1,%2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='numeric' name='MOD' return-type='int'>
      <formula>MOD(%1,%2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='PI' return-type='real'>
      <formula>PI()</formula>
    </function>
    <function group='numeric' name='POWER' return-type='real'>
      <formula>POWER(%1,%2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='POWER' return-type='real'>
      <formula>POWER(%1,%2)</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='numeric' name='POWER' return-type='real'>
      <formula>POWER(%1,%2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='RADIANS' return-type='real'>
      <formula>((%1/360) * 2 if(isNaN(sqrt(-1)) , Null,sqrt(-1))*pi())</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ROUND' return-type='real'>
      <formula>CAST(ROUND(%1, 0) AS Nullable(REAL))</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ROUND' return-type='real'>
      <formula>ROUND(%1, %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='ROUND' return-type='real'>
      <formula>ROUND(%1, %2)</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='numeric' name='ROUND' return-type='int'>
      <formula>ROUND(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='SIGN' return-type='int'>
      <formula>SIGN(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='SIN' return-type='real'>
      <formula>SIN(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='SQRT' return-type='real'>
      <formula>if(%1 &gt;= 0, SQRT(%1), NULL)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='SQUARE' return-type='real'>
      <formula>POWER(%1,2)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='SQUARE' return-type='int'>
      <formula>POWER(%1, 2)</formula>
      <argument type='int' />
    </function>
    <function group='numeric' name='TAN' return-type='real'>
      <formula>TAN(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='TRUNC' return-type='real'>
      <formula>TRUNC(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric;logical' name='ZN' return-type='real'>
      <formula>IFNULL(%1, 0)</formula>
      <argument type='real' />
    </function>
    <function group='numeric;logical' name='ZN' return-type='int'>
      <formula>IFNULL(%1, 0)</formula>
      <argument type='int' />
    </function>
    <function group='string' name='ASCII' return-type='int'>
      <formula>reinterpretAsUInt8(subString(%1, 1, 1))</formula>
      <argument type='str' />
    </function>
    <function group='string' name='CHAR' return-type='str'>
      <formula>char(%1)</formula>
      <argument type='real' />
    </function>
    <function group='string' name='CHAR' return-type='str'>
      <formula>char(%1)</formula>
      <argument type='int' />
    </function>
    <function group='string' name='CONTAINS' return-type='bool'>
      <formula>POSITION(%1, %2) > 0</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='DOMAIN' return-type='str'>
      <formula>domain(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='ENDSWITH' return-type='bool'>
      <formula>endsWith(trimRight(%1),%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='FIND' return-type='int'>
      <formula>POSITION(%1, %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='FIND' return-type='int'>
      <formula>POSITION(%1, %2, %3)</formula>
      <argument type='str' />
      <argument type='str' />
      <argument type='real' />
    </function>
    <function group='string' name='FIND' return-type='int'>
      <formula>POSITION(%1, %2, %3)</formula>
      <argument type='str' />
      <argument type='str' />
      <argument type='int' />
    </function>
    <function group='string' name='FINDNTH' return-type='int'>
      <formula>TABLEAU.FINDNTH(%1, %2, CAST(%3 Nullable(INTEGER) OR NULL))</formula>
      <argument type='str' />
      <argument type='str' />
      <argument type='real' />
    </function>
    <function group='string' name='GET_JSON_OBJECT' return-type='str'>
      <formula>JSON_QUERY(%2,%1)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='HOST' return-type='str'>
      <formula>netloc(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='LEFT' return-type='str'>
      <formula>SUBSTRING(%1,1,%2)</formula>
      <argument type='str' />
      <argument type='real' />
    </function>
    <function group='string' name='LEFT' return-type='str'>
      <formula>SUBSTRING(%1,1,%2)</formula>
      <argument type='str' />
      <argument type='int' />
    </function>
    <function group='string' name='LEN' return-type='int'>
      <formula>CHAR_LENGTH(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='LOWER' return-type='str'>
      <formula>LOWER(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='LTRIM' return-type='str'>
      <formula>LTRIM(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='LTRIM_THIS' return-type='str'>
      <formula>LTRIM(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='MAX' return-type='str'>
      <formula>GREATEST(%1, %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='MID' return-type='str'>
      <formula>&#10;(CASE WHEN (%2 IS NULL) OR %2 &lt; 1 THEN NULL&#10; ELSE SUBSTRING(%1,CAST(TRUNC(%2) Nullable(INTEGER)),CHAR_LENGTH(%1) - (CAST(TRUNC(%2) Nullable(INTEGER))) + 1) END)</formula>
      <argument type='str' />
      <argument type='real' />
    </function>
    <function group='string' name='MID' return-type='str'>
      <formula>&#10;(CASE WHEN (%2 IS NULL) OR %2 &lt; 1 THEN NULL&#10; ELSE SUBSTRING(%1,%2,CHARACTER_LENGTH(%1) - (%2) + 1) END)</formula>
      <argument type='str' />
      <argument type='int' />
    </function>
    <function group='string' name='MID' return-type='str'>
      <formula>(CASE WHEN %2 IS NULL OR %3 IS NULL THEN NULL&#10; WHEN CAST(FLOOR(%3) Nullable(INTEGER)) &lt; 1 THEN &apos;&apos;&#10; WHEN CAST(FLOOR(%2) Nullable(INTEGER)) &lt; 1 THEN SUBSTR(%1,1,CAST(FLOOR(%3) Nullable(INTEGER)))&#10;      ELSE SUBSTR(%1, CAST(FLOOR(%2) Nullable(INTEGER)), CAST(FLOOR(%3) Nullable(INTEGER))) END)</formula>
      <argument type='str' />
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='string' name='MID' return-type='str'>
      <formula>&#10;(CASE WHEN (%2 IS NULL) OR (%3 IS NULL) THEN NULL&#10; WHEN %3 &lt; 1 THEN &apos;&apos;&#10; WHEN %2 &lt; 1 THEN SUBSTRING(%1,1,%3)&#10; ELSE SUBSTRING(%1,%2,%3) END)</formula>
      <argument type='str' />
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='string' name='MIN' return-type='str'>
      <formula>(CASE&#10;&#9;WHEN (%1 IS NULL) OR (%2 IS NULL) THEN NULL&#10;&#9;WHEN %1 &lt; %2 THEN %1&#10;&#9;ELSE %2 END)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='PARSE_URL' return-type='str'>
      <formula>PARSE_URL(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='PARSE_URL_QUERY' return-type='str'>
      <formula>extractURLParameter(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='REGEXP_EXTRACT' return-type='str'>
      <formula>REGEXP_REPLACE( REGEXP_SUBSTR( %1, %2), %2, &apos;\1&apos;, 1, 1, &apos;c&apos; )</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='REGEXP_EXTRACT_NTH' return-type='str'>
      <formula>TABLEAU.REGEXP_EXTRACT_NTH(%1, %2, %3)</formula>
      <argument type='str' />
      <argument type='str' />
      <argument type='localint' />
    </function>
    <function group='string' name='REGEXP_MATCH' return-type='bool'>
      <formula>REGEXP_LIKE(%1, %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='REGEXP_REPLACE' return-type='str'>
      <formula>TABLEAU.REGEXP_REPLACE(%1, %2, %3, &apos;g&apos;)</formula>
      <argument type='str' />
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='REPLACE' return-type='str'>
      <formula>REPLACE(CAST(%1 AS Nullable(TEXT)), CAST(%2 AS Nullable(TEXT)), CAST(%3 AS Nullable(TEXT)))</formula>
      <argument type='str' />
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='RIGHT' return-type='str'>
      <formula>SUBSTRING(%1,-%2)</formula>
      <argument type='str' />
      <argument type='real' />
    </function>
    <function group='string' name='RIGHT' return-type='str'>
      <formula>SUBSTRING(%1,-%2)</formula>
      <argument type='str' />
      <argument type='int' />
    </function>
    <function group='string' name='RTRIM' return-type='str'>
      <formula>RTRIM(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='RTRIM_THIS' return-type='str'>
      <formula>RTRIM(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='SPACE' return-type='str'>
      <formula>repeat(&apos; &apos;,%1)</formula>
      <argument type='real' />
    </function>
    <function group='string' name='SPACE' return-type='str'>
      <formula>repeat(&apos; &apos;,%1)</formula>
      <argument type='int' />
    </function>
    <function group='string' name='SPLIT' return-type='str'>
      <formula>toString(arrayElement(splitByString(&apos;%2&apos;,%1),%3))
      </formula>
      <argument type='str' />
      <argument type='localstr' />
      <argument type='localint' />
    </function>
    <function group='string' name='STARTSWITH' return-type='bool'>
      <formula>startsWith(trimLeft(%1),%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='TLD' return-type='str'>
      <formula>topLevelDomain(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='TRIM' return-type='str'>
      <formula>TRIM(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='UPPER' return-type='str'>
      <formula>UPPER(%1)</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='DATE' return-type='date'>
      <formula>toDate(%1)</formula>
      <argument type='real' />
    </function>
    <function group='cast' name='DATE' return-type='date'>
      <formula>toDate(%1)</formula>
      <argument type='int' />
    </function>
    <function group='cast' name='DATE' return-type='date'>
      <formula>parseDateTimeBestEffort(%1)</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='DATE' return-type='date'>
      <formula>toDate(%1)</formula>
      <argument type='datetime' />
    </function>
    <function group='cast' name='DATE' return-type='date'>
      <formula>CAST(%1 AS Nullable(DATE))</formula>
      <argument type='date' />
    </function>
    <function group='cast' name='DATETIME' return-type='datetime'>
      <formula>(CAST(CAST(&apos;1900-01-01&apos; AS Nullable(DATE)) + CAST(%1 Nullable(INTEGER)) AS Nullable(TIMESTAMP)) +  CAST((%1 - CAST(%1 Nullable(INTEGER))) * 24 Nullable(INTEGER)) * INTERVAL &apos;1&apos; HOUR + CAST((%1 * 24  - CAST(%1 * 24 Nullable(INTEGER))) * 60 Nullable(INTEGER)) * INTERVAL &apos;1&apos; MINUTE + CAST((%1 * 24 * 60  - CAST(%1 * 24 * 60 Nullable(INTEGER))) * 60 AS DECIMAL(6)) * INTERVAL &apos;1&apos; SECOND)</formula>
      <argument type='real' />
    </function>
    <function group='cast' name='DATETIME' return-type='datetime'>
      <formula>toDateTime(%1)</formula>
      <argument type='int' />
    </function>
    <function group='cast' name='DATETIME' return-type='datetime'>
      <formula>toDateTime(parseDateTimeBestEffortOrNull(%1))</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='DATETIME' return-type='datetime'>
      <formula>%1</formula>
      <argument type='datetime' />
    </function>
    <function group='cast' name='DATETIME' return-type='datetime'>
      <formula>CAST(%1 AS Nullable(TIMESTAMP))</formula>
      <argument type='date' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>CAST(CAST(%1 Nullable(INTEGER) OR NULL) AS Nullable(DOUBLE) OR NULL)</formula>
      <argument type='bool' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>CAST(%1 AS Nullable(DOUBLE))</formula>
      <argument type='real' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>CAST(%1 AS Nullable(DOUBLE))</formula>
      <argument type='int' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>CAST(%1 AS Nullable(DOUBLE))</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>(toDate(%1) - DATE '1970-01-01' + 25567)</formula>
      <argument type='datetime' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>(toDate(%1) - DATE '1970-01-01' + 25567)</formula>
      <argument type='date' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>(CASE&#10;&#9;WHEN %1 THEN 1&#10;&#9;WHEN NOT %1 THEN 0&#10;&#9;ELSE NULL END)</formula>
      <argument type='bool' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>CAST(TRUNC(%1) AS Nullable(BIGINT))</formula>
      <argument type='real' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>CAST(%1 AS Nullable(INTEGER))</formula>
      <argument type='int' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>CAST(%1 AS Nullable(INTEGER))</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>(TO_DAYS(%1) - 693961)</formula>
      <argument type='datetime' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>toUInt64(%1) + 25567</formula>
      <argument type='date' />
    </function>
    <function group='cast' name='MAKEDATE' return-type='date'>
      <formula>TABLEAU.MAKE_DATE(CAST(%1 Nullable(INTEGER) OR NULL),CAST(%2 Nullable(INTEGER) OR NULL),CAST(%3 Nullable(INTEGER) OR NULL))</formula>
      <argument type='int' />
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='cast' name='MAKEDATETIME' return-type='datetime'>
      <formula>ADDTIME(CAST(CAST(%1 AS Nullable(DATE)) AS Nullable(DATETIME)), TIME(%2))</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='cast' name='MAKEDATETIME' return-type='datetime'>
      <formula>ADDTIME(CAST(CAST(%1 AS Nullable(DATE)) AS Nullable(DATETIME)), TIME(%2))</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='cast' name='MAKEDATETIME' return-type='datetime'>
      <formula>ADDTIME(CAST(%1 AS Nullable(DATETIME)), TIME(%2))</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='cast' name='MAKETIME' return-type='datetime'>
      <formula>(&apos;1899-12-30&apos;::date + TABLEAU.MAKE_TIME(CAST(%1 Nullable(INTEGER) OR NULL),CAST(%2 Nullable(INTEGER) OR NULL),CAST(%3 Nullable(INTEGER) OR NULL)))</formula>
      <argument type='int' />
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='cast' name='REAL' return-type='real'>
      <formula>CAST(&apos;double&apos;, %1</formula>
      <argument type='int' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>(CASE&#10;&#9;WHEN %1 = TRUE THEN &apos;1&apos;&#10;&#9;WHEN NOT %1 = TRUE THEN &apos;0&apos;&#10;&#9;ELSE CAST(NULL AS Nullable(String)) END)</formula>
      <argument type='bool' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>toString(%1)</formula>
      <argument type='real' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>toString(%1)</formula>
      <argument type='int' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>CAST(%1 AS Nullable(String))</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>toString(%1)</formula>
      <argument type='datetime' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>toString(%1)</formula>
      <argument type='date' />
    </function>
    <function group='logical' name='IFNULL' return-type='bool'>
      <formula>(CASE WHEN %1 THEN 1 WHEN NOT %1 THEN 0 ELSE (CASE WHEN %2 THEN 1 WHEN NOT %2 THEN 0 ELSE NULL END) END)=1</formula>
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='logical' name='IFNULL' return-type='real'>
      <formula>IFNULL(%1, %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='logical' name='IFNULL' return-type='int'>
      <formula>IFNULL(%1, %2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='logical' name='IFNULL' return-type='str'>
      <formula>IFNULL(%1, %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='logical' name='IFNULL' return-type='datetime'>
      <formula>IFNULL(%1, %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='logical' name='IFNULL' return-type='datetime'>
      <formula>IFNULL(%1, CAST(%2 AS Nullable(TIMESTAMP)))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='logical' name='IFNULL' return-type='datetime'>
      <formula>IFNULL(CAST(%1 AS Nullable(TIMESTAMP)), %2)</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='logical' name='IFNULL' return-type='date'>
      <formula>IIF(IsEmpty(%1), %2, %1)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='logical' name='IFNULL' return-type='spatial'>
      <formula>IFNULL(%1, %2)</formula>
      <argument type='spatial' />
      <argument type='spatial' />
    </function>
    <function group='logical' name='IIF' return-type='bool'>
      <formula>((%1 AND %2) OR ((NOT %1) AND %3))</formula>
      <argument type='bool' />
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='logical' name='IIF' return-type='real'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END)</formula>
      <argument type='bool' />
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='logical' name='IIF' return-type='real'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END)</formula>
      <argument type='bool' />
      <argument type='real' />
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='logical' name='IIF' return-type='int'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END)</formula>
      <argument type='bool' />
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='logical' name='IIF' return-type='int'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END)</formula>
      <argument type='bool' />
      <argument type='int' />
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='logical' name='IIF' return-type='str'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END)</formula>
      <argument type='bool' />
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='logical' name='IIF' return-type='str'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END)</formula>
      <argument type='bool' />
      <argument type='str' />
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='logical' name='IIF' return-type='datetime'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END)</formula>
      <argument type='bool' />
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='logical' name='IIF' return-type='datetime'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END)</formula>
      <argument type='bool' />
      <argument type='datetime' />
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='logical' name='IIF' return-type='date'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END)</formula>
      <argument type='bool' />
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='logical' name='IIF' return-type='date'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END)</formula>
      <argument type='bool' />
      <argument type='date' />
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='logical' name='IIF' return-type='spatial'>
      <formula>(CASE %1 WHEN TRUE THEN %2 WHEN FALSE THEN %3 ELSE NULL END)</formula>
      <argument type='bool' />
      <argument type='spatial' />
      <argument type='spatial' />
    </function>
    <function group='logical' name='IIF' return-type='spatial'>
      <formula>(CASE %1 WHEN TRUE THEN %2 WHEN FALSE THEN %3 ELSE %4 END)</formula>
      <argument type='bool' />
      <argument type='spatial' />
      <argument type='spatial' />
      <argument type='spatial' />
    </function>
    <function group='logical' name='ISNULL' return-type='bool'>
      <formula>((CASE WHEN %1 OR NOT %1 THEN 1 ELSE NULL END) IS NULL)</formula>
      <argument type='bool' />
    </function>
    <function group='logical' name='ISNULL' return-type='bool'>
      <formula>(%1 IS NULL)</formula>
      <argument type='real' />
    </function>
    <function group='logical' name='ISNULL' return-type='bool'>
      <formula>(%1 IS NULL)</formula>
      <argument type='str' />
    </function>
    <function group='logical' name='ISNULL' return-type='bool'>
      <formula>(%1 IS NULL)</formula>
      <argument type='datetime' />
    </function>
    <function group='logical' name='ISNULL' return-type='bool'>
      <formula>(%1 IS NULL)</formula>
      <argument type='spatial' />
    </function>
    <function group='aggregate' name='AVG' return-type='real'>
      <formula>AVG(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='AVG' return-type='real'>
      <formula>AVG(CAST(%1 AS Nullable(	DOUBLE)))</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='COLLECT' return-type='spatial'>
      <formula>geography::CollectionAggregate(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='spatial' />
    </function>
    <function group='aggregate' name='CORR' return-type='real'>
      <formula>CORR(%1, %2)</formula>
      <unagg-formula>CAST(NULL AS Nullable(DOUBLE))</unagg-formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='aggregate' name='COUNT' return-type='int'>
      <formula>COUNT(%1)</formula>
      <unagg-formula>(CASE WHEN %1 THEN 1 WHEN NOT %1 THEN 1 ELSE 0 END)</unagg-formula>
      <argument type='bool' />
    </function>
    <function group='aggregate' name='COUNT' return-type='int'>
      <formula>COUNT(%1)</formula>
      <unagg-formula>isNotNull(%1)</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='COUNT' return-type='int'>
      <formula>COUNT(%1)</formula>
      <unagg-formula>isNotNull(%1)</unagg-formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='COUNT' return-type='int'>
      <formula>COUNT(%1)</formula>
      <unagg-formula>isNotNull(%1)</unagg-formula>
      <argument type='datetime' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>isNotNull(%1)</unagg-formula>
      <argument type='bool' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>(CASE WHEN (%1 IS NULL) THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>(CASE WHEN %1 IS NULL THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>(CASE WHEN %1 IS NULL THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>(CASE WHEN %1 IS NULL THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='datetime' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>(CASE WHEN %1 IS NULL THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='date' />
    </function>
    <function group='aggregate' name='COVAR' return-type='real'>
      <formula>COVAR_SAMP(%1, %2)</formula>
      <unagg-formula>NULL</unagg-formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='aggregate' name='COVARP' return-type='real'>
      <formula>COVAR_POP(%1, %2)</formula>
      <unagg-formula>CASE WHEN %1 IS NULL THEN CAST(NULL AS Nullable(DOUBLE))&#10;WHEN %2 IS NULL THEN CAST(NULL AS Nullable(DOUBLE))&#10;ELSE 0.0&#10; END</unagg-formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='aggregate' name='GROUP_CONCAT' return-type='str'>
      <formula>replaceRegexpAll(toString(arraySort(groupUniqArray(%1))), '[\[\]\']' , '')</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='MAX' return-type='bool'>
      <formula>groupBitOr(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='bool' />
    </function>
    <function group='aggregate' name='MAX' return-type='real'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='MAX' return-type='int'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='MAX' return-type='str'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='MAX' return-type='datetime'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='datetime' />
    </function>
    <function group='aggregate' name='MAX' return-type='date'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='date' />
    </function>
    <function group='aggregate' name='MEDIAN' return-type='real'>
      <formula>median(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='MEDIAN' return-type='int'>
      <formula>median(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='MIN' return-type='bool'>
      <formula>(MIN(CASE WHEN %1 THEN 1 WHEN NOT %1 THEN 0 ELSE CAST(NULL Nullable(INTEGER)) END)=1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='bool' />
    </function>
    <function group='aggregate' name='MIN' return-type='real'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='MIN' return-type='int'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='MIN' return-type='str'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='MIN' return-type='datetime'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='datetime' />
    </function>
    <function group='aggregate' name='MIN' return-type='date'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='date' />
    </function>
    <function group='aggregate' name='PERCENTILE' return-type='real'>
      <formula>quantile(%2)(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
      <argument type='localreal' />
    </function>
    <function group='aggregate' name='PERCENTILE' return-type='real'>
      <formula>quantile(%2)(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
      <argument type='localreal' />
    </function>
    <function group='aggregate' name='STDEV' return-type='real'>
      <formula>STDDEV_SAMP(%1)</formula>
      <unagg-formula>NULL</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='STDEVP' return-type='real'>
      <formula>(CASE WHEN COUNT(%1) &gt; 0 THEN&#10;&#9;SQRT((COUNT(%1) * SUM(POWER(%1,2)) - POWER(SUM(%1), 2) ) / (POWER(COUNT(%1),2)))&#10;&#9;ELSE NULL END)</formula>
      <unagg-formula>(CASE WHEN %1 IS NULL THEN NULL ELSE 0.0 END)</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='SUM' return-type='real'>
      <formula>SUM(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='SUM' return-type='int'>
      <formula>SUM(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='VAR' return-type='real'>
      <formula>VAR_SAMP(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='VARP' return-type='real'>
      <formula>VAR_POP(%1)</formula>
      <unagg-formula>(CASE WHEN %1 IS NULL THEN NULL ELSE 0.0 END)</unagg-formula>
      <argument type='real' />
    </function>
    <function group='operator' name='!' return-type='bool'>
      <formula>(NOT %1)</formula>
      <argument type='bool' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 AND NOT %2 OR NOT %1 AND %2)</formula>
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 AND %2 = 0 OR NOT %1 AND %2 &lt;&gt; 0)</formula>
      <argument type='bool' />
      <argument type='int' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 = 0 AND %2 OR %1 &lt;&gt; 0 AND NOT %2)</formula>
      <argument type='int' />
      <argument type='bool' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(TIMESTAMP(%1) &lt;&gt; %2)</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; TIMESTAMP(%2))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='%' return-type='real'>
      <formula>(CASE WHEN %2 = 0 THEN NULL ELSE %1 - ( FLOOR ( SIGN(%1) * (%1/%2) ) * %2 * SIGN(%1) ) END)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='%' return-type='int'>
      <formula>moduloOrZero(%1, %2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='&amp;&amp;' return-type='bool'>
      <formula>(%1 AND %2)</formula>
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='operator' name='*' return-type='real'>
      <formula>(%1 * %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='*' return-type='real'>
      <formula>(CAST(%1 AS FLOAT) * %2)</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='operator' name='*' return-type='real'>
      <formula>(%1 * CAST(%2 AS FLOAT))</formula>
      <argument type='int' />
      <argument type='real' />
    </function>
    <function group='operator' name='*' return-type='int'>
      <formula>(%1 * %2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='+' return-type='real'>
      <formula>(%1 + %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='+' return-type='int'>
      <formula>(%1 + %2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='+' return-type='str'>
      <formula>concat(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='+' return-type='datetime'>
      <formula>(cast(%1 AS Nullable(DATETIME) + %2)</formula>
      <argument type='datetime' />
      <argument type='real' />
    </function>
    <function group='operator' name='+' return-type='datetime'>
      <formula>CAST(CONCAT(DATE_ADD(%1, CAST(%2 AS Nullable(INTEGER))), SUBSTR(CAST(%1 AS Nullable(TIMESTAMP)), 11)) AS Nullable(TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='int' />
    </function>
    <function group='operator' name='+' return-type='datetime'>
      <formula>(CASE WHEN CAST(TRUNCATE((%2 * 24 * 60 - CAST(TRUNCATE(%2 * 24 * 60,0) Nullable(INTEGER))) * 60,0) Nullable(INTEGER)) IS NOT NULL THEN DATEADD(&apos;s&apos;, CAST(CAST(TRUNCATE((%2 * 24 * 60 - CAST(TRUNCATE(%2 * 24 * 60,0) Nullable(INTEGER))) * 60,0) Nullable(INTEGER)) AS BIGINT), CAST((CASE WHEN CAST(TRUNCATE((%2 * 24 - CAST(TRUNCATE(%2 * 24,0) Nullable(INTEGER))) * 60,0) Nullable(INTEGER)) IS NOT NULL THEN DATEADD(&apos;mi&apos;, CAST(CAST(TRUNCATE((%2 * 24 - CAST(TRUNCATE(%2 * 24,0) Nullable(INTEGER))) * 60,0) Nullable(INTEGER)) AS BIGINT), CAST((CASE WHEN CAST(TRUNCATE((%2 - CAST(TRUNCATE(%2,0) Nullable(INTEGER))) * 24,0) Nullable(INTEGER)) IS NOT NULL THEN DATEADD(&apos;hh&apos;, CAST(CAST(TRUNCATE((%2 - CAST(TRUNCATE(%2,0) Nullable(INTEGER))) * 24,0) Nullable(INTEGER)) AS BIGINT), CAST((CASE WHEN CAST(TRUNCATE(%2,0) Nullable(INTEGER)) IS NOT NULL THEN DATEADD(&apos;d&apos;, CAST(CAST(TRUNCATE(%2,0) Nullable(INTEGER)) AS BIGINT), CAST(%1 AS Nullable(TIMESTAMP))) END) AS Nullable(TIMESTAMP))) END) AS Nullable(TIMESTAMP))) END) AS Nullable(TIMESTAMP))) END)</formula>
      <argument type='date' />
      <argument type='real' />
    </function>
    <function group='operator' name='+' return-type='date'>
      <formula>DATE_ADD(DAY, %2, %1)</formula>
      <argument type='date' />
      <argument type='real' />
    </function>
    <function group='operator' name='+' return-type='date'>
      <formula>DATE_ADD(DAY, %2, %1)</formula>
      <argument type='date' />
      <argument type='int' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>(-%1)</formula>
      <argument type='real' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>(%1 - %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>(DATE_DIFF(&apos;DAY&apos;, CAST( %2 AS Nullable(TIMESTAMP)), CAST(%1 AS Nullable(TIMESTAMP))) + (COALESCE(HOUR(%1), 0) - COALESCE(HOUR(%2), 0) + (COALESCE(MINUTE(%1), 0) - COALESCE(MINUTE(%2), 0) + (COALESCE(SECOND(%1), 0) - COALESCE(SECOND(%2), 0)) / 60.0) / 60.0) / 24.0)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>CASE WHEN %1 IS NULL OR %2 IS NULL THEN CAST(NULL AS Nullable(DOUBLE)) ELSE (CAST(%1 AS Nullable(DATE)) - %2 + CAST(EXTRACT(HOUR FROM %1) AS Nullable(DOUBLE)) / 24 +  CAST(EXTRACT(MINUTE FROM %1) AS Nullable(DOUBLE)) / (24 * 60) + CAST(EXTRACT(SECOND FROM %1) AS Nullable(DOUBLE)) / (24 * 60 * 60) ) END</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>(toUnixTimestamp(%1) - toUnixTimestamp(%2)) / 86400.0</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>(toUnixTimestamp(%1) - toUnixTimestamp(%2)) / 86400.0</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='-' return-type='int'>
      <formula>(-%1)</formula>
      <argument type='int' />
    </function>
    <function group='operator' name='-' return-type='int'>
      <formula>(%1 - %2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='-' return-type='int'>
      <formula>(%1 - %2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='-' return-type='datetime'>
      <formula>DATE_ADD(DAY, - TRUNC(%2), %1)</formula>
      <argument type='datetime' />
      <argument type='real' />
    </function>
    <function group='operator' name='-' return-type='datetime'>
      <formula>DATE_ADD(DAY, - %2, %1)</formula>
      <argument type='datetime' />
      <argument type='int' />
    </function>
    <function group='operator' name='-' return-type='datetime'>
      <formula>TIMESTAMPADD(SQL_TSI_SECOND,CAST((%2 * 24 * 60 - CAST(%2 * 24 * 60 Nullable(INTEGER))) * -60 Nullable(INTEGER)),TIMESTAMPADD(SQL_TSI_MINUTE,CAST((%2 * 24 - CAST(%2 * 24 Nullable(INTEGER))) * -60 Nullable(INTEGER)),TIMESTAMPADD(SQL_TSI_HOUR,CAST((%2 - CAST(%2 Nullable(INTEGER))) * -24 Nullable(INTEGER)),TIMESTAMPADD(SQL_TSI_DAY,CAST(-%2 Nullable(INTEGER)),CAST(%1 AS Nullable(TIMESTAMP))))))</formula>
      <argument type='date' />
      <argument type='real' />
    </function>
    <function group='operator' name='-' return-type='date'>
      <formula>(ADDDAY(%1, TRUNC(-(%2))))</formula>
      <argument type='date' />
      <argument type='real' />
    </function>
    <function group='operator' name='-' return-type='date'>
      <formula>DATEADD(DAY, -%2, %1)</formula>
      <argument type='date' />
      <argument type='int' />
    </function>
    <function group='operator' name='/' return-type='real'>
      <formula>(CASE WHEN %2 &lt;&gt; 0 THEN %1 / %2 END)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='/' return-type='real'>
      <formula>(CASE WHEN %2 = 0 THEN NULL ELSE %1 / %2 END)</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='operator' name='/' return-type='real'>
      <formula>(CASE WHEN %2 = 0 THEN NULL ELSE %1 / %2 END)</formula>
      <argument type='int' />
      <argument type='real' />
    </function>
    <function group='operator' name='/' return-type='real'>
      <formula>(CASE WHEN %2 = 0 THEN NULL ELSE %1 / %2 END)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(%1 &lt; %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(%1 &lt; %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(TIMESTAMP(%1) &lt; %2)</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(%1 &lt; TIMESTAMP(%2))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(%1 &lt; %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(%1 &lt; CAST(%2 AS Nullable(TIMESTAMP)))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(CAST(%1 AS Nullable(TIMESTAMP)) &lt; %2)</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(%1 &lt; %2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(%1 &lt;= %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(%1 &lt;= %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(TIMESTAMP(%1) &lt;= %2)</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(%1 &lt;= TIMESTAMP(%2))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(%1 &lt;= %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(%1 &lt;= CAST(%2 AS Nullable(TIMESTAMP)))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(CAST(%1 AS Nullable(TIMESTAMP)) &lt;= %2)</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(%1 &lt;= %2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 AND %2 OR NOT %1 AND NOT %2)</formula>
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 AND %2 &lt;&gt; 0 OR NOT %1 AND %2 = 0)</formula>
      <argument type='bool' />
      <argument type='int' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 = %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 &lt;&gt; 0 AND %2 OR %1 = 0 AND NOT %2)</formula>
      <argument type='int' />
      <argument type='bool' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 = %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(TIMESTAMP(%1) = %2)</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 = TIMESTAMP(%2))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 = %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 = TO_TIMESTAMP(%2))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(CAST(%1 AS Nullable(TIMESTAMP)) = %2)</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 = %2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(%1 &gt; %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(%1 &gt; %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(TIMESTAMP(%1) &gt; %2)</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(%1 &gt; TIMESTAMP(%2))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(%1 &gt; %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(%1 &gt; CAST(%2 AS Nullable(TIMESTAMP)))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(CAST(%1 AS Nullable(TIMESTAMP)) &gt; %2)</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(%1 &gt; %2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1 &gt;= %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1 &gt;= %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(TIMESTAMP(%1) &gt;= %2)</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1 &gt;= TIMESTAMP(%2))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1 &gt;= %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1 &gt;= CAST(%2 AS Nullable(TIMESTAMP)))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(TO_TIMESTAMP(%1) &gt;= %2)</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1 &gt;= %2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='^^' return-type='real'>
      <formula>(CASE WHEN %1 &lt; 0 AND TRUNC(%2) &lt;&gt; %2 THEN NULL ELSE POWER(%1,%2) END)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='^^' return-type='real'>
      <formula>(CASE WHEN %1 &lt; 0 AND FLOOR(%2) &lt;&gt; %2 THEN NULL ELSE POWER(%1,%2) END)</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='operator' name='^^' return-type='real'>
      <formula>POWER(CAST(%1 as float),%2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='||' return-type='bool'>
      <formula>(%1 OR %2)</formula>
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='date' name='DAY' return-type='int'>
      <formula>toDayOfMonth(%1)</formula>
      <argument type='datetime' />
    </function>
    <function group='date' name='DAY' return-type='int'>
      <formula>toDayOfMonth(%1)</formula>
      <argument type='date' />
    </function>
    <function group='date' name='ISDATE' return-type='bool'>
      <formula>(CAST(%1 AS Nullable(DATE)) IS NOT NULL)</formula>
      <argument type='str' />
    </function>
    <function group='date' name='MAX' return-type='datetime'>
      <formula>(CASE&#10;&#9;WHEN IFNULL(%1) THEN NULL&#10;&#9;WHEN IFNULL(%2) THEN NULL&#10;&#9;ELSE GREATEST(%1, %2) END)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='date' name='MAX' return-type='date'>
      <formula>(CASE&#10;&#9;WHEN %1 IS NULL OR %2 IS NULL THEN NULL&#10;&#9;WHEN %1 &gt; %2 THEN %1&#10;&#9;ELSE %2 END)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='date' name='MIN' return-type='datetime'>
      <formula>(CASE&#10;&#9;WHEN %1 IS NULL OR %2 IS NULL THEN NULL&#10;&#9;WHEN %1 &lt; %2 THEN %1&#10;&#9;ELSE %2 END)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='date' name='MIN' return-type='date'>
      <formula>(CASE&#10;&#9;WHEN (%1 IS NULL) OR (%2 IS NULL) THEN NULL&#10;&#9;WHEN %1 &lt; %2 THEN %1&#10;&#9;ELSE %2 END)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='date' name='MONTH' return-type='int'>
      <formula>MONTH(%1)</formula>
      <argument type='datetime' />
    </function>
    <function group='date' name='MONTH' return-type='int'>
      <formula>MONTH(%1)</formula>
      <argument type='date' />
    </function>
    <function group='date' name='NOW' return-type='datetime'>
      <formula>NOW()</formula>
    </function>
    <function group='date' name='TIMESTAMP_TO_USEC' return-type='int'>
      <formula>toUnixTimestamp64Micro(CAST(%1, 'Nullable(DateTime64(6))'))</formula>
      <argument type='datetime' />
    </function>
    <function group='date' name='TODAY' return-type='date'>
      <formula>today()</formula>
    </function>
    <function group='date' name='USEC_TO_TIMESTAMP' return-type='datetime'>
      <formula>toDateTime(fromUnixTimestamp64Micro(%1))</formula>
      <argument type='int' />
    </function>
    <function group='date' name='YEAR' return-type='int'>
      <formula>toYear(%1)</formula>
      <argument type='datetime' />
    </function>
    <function group='date' name='YEAR' return-type='int'>
      <formula>toYear(%1)</formula>
      <argument type='date' />
    </function>
    <!--
      date-function
      Doesn't require a group. Can contain multiple formulas
      for different date parts. If a part-specific formula is missing, Tableau
      will use the generic (no part attribute) formula.
    -->
    <date-function name='DATEADD' return-type='datetime'>
      <formula>CAST(date_add(%1, %2, %3) AS Nullable(DateTime))</formula>
      <argument type='localstr' />
      <argument type='real' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATEADD' return-type='datetime'>
      <formula>CAST(date_add(%1, %2, %3) AS Nullable(DateTime))</formula>
      <argument type='localstr' />
      <argument type='int' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula>CAST(dateDiff('%1', %2, %3) AS Nullable(INTEGER))</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula>CAST(dateDiff('%1', %2, %3) AS Nullable(INTEGER))</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='date' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula>CAST(dateDiff('%1', %2, %3) AS Nullable(INTEGER))</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula>CAST(dateDiff('%1', %2, %3) AS Nullable(INTEGER))</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='date' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula>CAST(dateDiff('%1', %2, %3) AS Nullable(INTEGER))</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula>CAST(dateDiff('%1', %2, %3) AS Nullable(INTEGER))</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='date' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula>CAST(dateDiff('%1', %2, %3) AS Nullable(INTEGER))</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula>toNullable(dateDiff('%1', %2, %3))</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='date' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATENAME' return-type='str'>
      <formula part='year'>CAST(toYear(%2) AS Nullable(String))</formula>
      <formula part='quarter'>CAST(toQuarter(%2) AS Nullable(String))</formula>
      <formula part='month'>CAST(toMonth(%2) AS Nullable(String))</formula>
      <formula part='dayofyear'>CAST(toDayOfYear(%2) AS Nullable(String))</formula>
      <formula part='day'>CAST(toDayOfMonth(%2) AS Nullable(String))</formula>
      <formula part='weekday'>CAST(toDayOfWeek(%2) mod 7 + 1 AS Nullable(String))</formula>
      <formula part='week'>CAST(toWeek(%2, 8) AS Nullable(String))</formula>
      <formula part='hour'>CAST(toHour(%2) AS Nullable(String))</formula>
      <formula part='minute'>CAST(toMinute(%2) AS Nullable(String))</formula>
      <formula part='second'>CAST(toSecond(%2) AS Nullable(String))</formula>
      <argument type='localstr' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATENAME' return-type='str'>
      <formula part='year'>CAST(toYear(%2) AS Nullable(String))</formula>
      <formula part='quarter'>CAST(toQuarter(%2) AS Nullable(String))</formula>
      <formula part='month'>CAST(toMonth(%2) AS Nullable(String))</formula>
      <formula part='dayofyear'>CAST(toDayOfYear(%2) AS Nullable(String))</formula>
      <formula part='day'>CAST(toDayOfMonth(%2) AS Nullable(String))</formula>
      <formula part='weekday'>CAST(toDayOfWeek(%2) mod 7 + 1 AS Nullable(String))</formula>
      <formula part='week'>CAST(toWeek(%2, 8) AS Nullable(String))</formula>
      <formula part='hour'>CAST(toHour(%2) AS Nullable(String))</formula>
      <formula part='minute'>CAST(toMinute(%2) AS Nullable(String))</formula>
      <formula part='second'>CAST(toSecond(%2) AS Nullable(String))</formula>
      <argument type='localstr' />
      <argument type='date' />
    </date-function>
    <date-function name='DATENAME' return-type='str'>
      <formula part='week'>CAST(toWeek(%2, (CASE WHEN %3=0 THEN 8 WHEN %3=1 THEN 9 ELSE 8 END)) AS Nullable(String))</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATENAME' return-type='str'>
      <formula part='week'>CAST(toWeek(%2, (CASE WHEN %3=0 THEN 8 WHEN %3=1 THEN 9 ELSE 8 END)) AS Nullable(String))</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATEPARSE' return-type='datetime'>
      <formula>parseDateTimeBestEffort32(%2, %1)</formula>
      <argument type='localstr' />
      <argument type='str' />
    </date-function>
    <date-function name='DATEPART' return-type='int'>
      <formula part='year'>toYear(%2)</formula>
      <formula part='quarter'>toQuarter(%2)</formula>
      <formula part='month'>toMonth(%2)</formula>
      <formula part='dayofyear'>toDayOfYear(%2)</formula>
      <formula part='day'>toDayOfMonth(%2)</formula>
      <formula part='weekday'>toDayOfWeek(%2)</formula>
      <formula part='week'>toWeek(%2, 8)</formula>
      <formula part='hour'>toHour(%2)</formula>
      <formula part='minute'>toMinute(%2)</formula>
      <formula part='second'>toSecond(%2)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATEPART' return-type='int'>
      <formula part='year'>CAST(toYear(%2) AS Nullable(INTEGER))</formula>
      <formula part='quarter'>CAST(toQuarter(%2) AS Nullable(INTEGER))</formula>
      <formula part='month'>CAST(toMonth(%2) AS Nullable(INTEGER))</formula>
      <formula part='dayofyear'>CAST(toDayOfYear(%2) AS Nullable(INTEGER))</formula>
      <formula part='day'>CAST(toDayOfMonth(%2) AS Nullable(INTEGER))</formula>
      <formula part='weekday'>CAST(toDayOfWeek(%2) mod 7 + 1 AS Nullable(INTEGER))</formula>
      <formula part='week'>CAST(toWeek(%2, 8) AS Nullable(INTEGER))</formula>
      <formula part='hour'>CAST(toHour(%2) AS Nullable(INTEGER))</formula>
      <formula part='minute'>CAST(toMinute(%2) AS Nullable(INTEGER))</formula>
      <formula part='second'>CAST(toSecond(%2) AS Nullable(INTEGER))</formula>
      <argument type='localstr' />
      <argument type='date' />
    </date-function>
    <date-function name='DATEPART' return-type='int'>
      <formula part='week'>CAST(toWeek(%2, (CASE WHEN %3=0 THEN 8 WHEN %3=1 THEN 9 ELSE 8 END)) AS Nullable(INTEGER))</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATEPART' return-type='int'>
      <formula part='week'>CAST(toWeek(%2, (CASE WHEN %3=0 THEN 8 WHEN %3=1 THEN 9 ELSE 8 END)) AS Nullable(INTEGER))</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATETRUNC' return-type='datetime'>
      <formula>CAST(date_trunc('%1', %2) AS Nullable(DateTime))</formula>
      <argument type='localstr' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATETRUNC' return-type='datetime'>
      <formula>CAST(date_trunc('%1', %2) AS Nullable(DateTime))</formula>
      <argument type='localstr' />
      <argument type='date' />
    </date-function>
  </function-map>

  <!--
    supported-aggregations
    Comprehensive list of supported aggregations and date truncations
  -->
  <supported-aggregations>
    <aggregation value='AGG_COUNT'/>
    <aggregation value='AGG_COUNTD'/>
    <aggregation value='AGG_SUM'/>
    <aggregation value='AGG_AVG'/>
    <aggregation value='AGG_MIN'/>
    <aggregation value='AGG_MAX'/>
    <aggregation value='AGG_STDEV'/>
    <aggregation value='AGG_STDEVP'/>
    <aggregation value='AGG_VAR'/>
    <aggregation value='AGG_VARP'/>
    <aggregation value='AGG_COVAR'/>
    <aggregation value='AGG_COVARP'/>
    <aggregation value='AGG_CORR'/>
    <aggregation value='AGG_SUM_XSQR'/>
    <aggregation value='AGG_COLLECT'/>
    <aggregation value='AGG_ATTR'/>
    <aggregation value='AGG_MEDIAN'/>
    <aggregation value='AGG_PERCENTILE'/>
<!--
    <aggregation value='AGG_QUART1'/>
    <aggregation value='AGG_QUART3'/>
    <aggregation value='AGG_SKEWNESS'/>
    <aggregation value='AGG_KURTOSIS'/>
    <aggregation value='AGG_INOUT'/>
    <aggregation value='AGG_USER'/>
-->
    <aggregation value='AGG_YEAR'/>
    <aggregation value='AGG_QTR'/>
    <aggregation value='AGG_MONTH'/>
    <aggregation value='AGG_DAY'/>
    <aggregation value='AGG_WEEK'/>
    <aggregation value='AGG_WEEKDAY'/>
    <aggregation value='AGG_MONTHYEAR'/>
    <aggregation value='AGG_MDY'/>
    <aggregation value='AGG_HOUR'/>
    <aggregation value='AGG_MINUTE'/>
    <aggregation value='AGG_SECOND'/>

    <aggregation value='TRUNC_YEAR'/>
    <aggregation value='TRUNC_QTR'/>
    <aggregation value='TRUNC_MONTH'/>
    <aggregation value='TRUNC_DAY'/>
    <aggregation value='TRUNC_WEEK'/>
    <aggregation value='TRUNC_HOUR'/>
    <aggregation value='TRUNC_MINUTE'/>
    <aggregation value='TRUNC_SECOND'/>
  </supported-aggregations>

  <!--
    sql-format
    Strategies and formulas for SQL expressions that
    are too complex for simple function mapping
  -->
  <sql-format>
    <!--
      date-parts
      Used with generic (non-part-specific) date function formulas.
      A date-part-group can apply to one or more date functions, denoted
      by date-function child elements. If none are specified, the group
      acts as the default.

      The name attribute specifies a Tableau date part, while the
      value attribute contains the date part string literal to use in
      corresponding date functions.
    -->
    <date-parts>
      <date-part-group>
        <date-function name='DATETRUNC' />
        <part name='year' value='year' />
        <part name='quarter' value='quarter' />
        <part name='month' value='month' />
        <part name='day' value='day' />
        <part name='dayofyear' value='day' />
        <part name='week' value='week' />
        <part name='weekday' value='day' />
        <part name='hour' value='hour' />
        <part name='minute' value='minute' />
        <part name='second' value='second' />
      </date-part-group>
      <date-part-group>
        <date-function name='DATEADD' />
        <part name='year' value='year' />
        <part name='quarter' value='quarter' />
        <part name='month' value='month' />
        <part name='day' value='day' />
        <part name='dayofyear' value='day' />
        <part name='week' value='week' />
        <part name='weekday' value='day' />
        <part name='hour' value='hour' />
        <part name='minute' value='minute' />
        <part name='second' value='second' />
      </date-part-group>
      <date-part-group>
        <date-function name='DATEDIFF' />
        <part name='year' value='year' />
        <part name='quarter' value='quarter' />
        <part name='month' value='month' />
        <part name='day' value='day' />
        <part name='dayofyear' value='day' />
        <part name='week' value='week' />
        <part name='weekday' value='day' />
        <part name='hour' value='hour' />
        <part name='minute' value='minute' />
        <part name='second' value='second' />
      </date-part-group>
    </date-parts>
    <!--
      format-date-literal
      Specifies a formula for expressing a date literal, as well as an *ICU* date format.
      %1 is the format string and %2 is the formatted date literal.
    -->
    <format-date-literal formula="toDate('%1', '%2')"  format='yyyy-MM-dd' />
    <format-datetime-literal formula="toDateTime('%1', '%2')" format='yyyy-MM-ddTHH:mm:ss.SSSZ' />
  </sql-format>
</dialect>
